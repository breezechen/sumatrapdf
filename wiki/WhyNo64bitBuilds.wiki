#summary Why we don't provide 64bit builds.

Occasionally people ask us to provide 64bit builds. We're not planning to do that.

It's about tradeoffs.

There are 2 potential reasons for 64bit builds:

 * the code might be faster
 * 64bit code can address more than 4GB of memory

64 bit code has more registers so more efficient code can be generated. On the other hand, every pointer is twice as big which increases memory usage which slows down the code due to increased cache misses, which are very expensive on modern CPUs. We don't believe the speed advantage would be significant (it might as well be negative) and no one has shown with benchmarks that it's not the case.

As to bigger addressable memory: we don't think PDFs that require 4GB of memory to render are worth fighting for.

There is a significant downside to providing 64bit builds: user confusion. Most people are oblivious to 64bit vs. 32bit differences. If we offered both 32bit and 64bit downloads, we would force every person to understand the difference. We would open up a possibility of 32bit users mistakenly downloading 64bit builds, which wouldn't work on their machines.

That is the primary reason we only provide 32bit builds, that work just as well on 64bit systems as on 32bit systems but there are other downsides, like increased workload it would impose on developers (like the need to test 2 builds).