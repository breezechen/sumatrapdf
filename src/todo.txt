TODO list for Sumatra PDF.

Must have before next (0.2) release:
- less intrusive icon
- I think state preserving still has bugs and can nuke some settings

Nice to have:
- toolbar
- more links (actions) handling 
- move document with a mouse
- do loading in rendering in a background thread, without blocking the UI
- FIT VISIBLE option
- good UI for history of opened files. At the very least a type-down list, ordered by
  last access time. Type-down filters by file name (or maybe full path?). Filter out
  files that don't exist anymore (and remove them from history)
- easy toggle to full-screen mode (Ctrl-L ?)
- UI for table of contents
- bookmarks per PDF, persisted across sessions. UI for handling bookmarks (add bookmark, delete
  bookmark, go to bookmark). 2 cases need to be handled: going to a bookmark in the currently
  displayed PDF file. Going to a "global" bookmark, across all PDF files (i.e. show a list
  of all bookmarks in all PDF files, grouped by PDF file). Those 2 cases need separate UI.
- "launch with acrobat" option (menu item?), so that it's easy to launch a doc
  with acrobat if it implements an important function that I don't (e.g. priting)
  Needs to read registry to find where acrobat is installed.
- detect if *pdf files are associated with me at startup, if not, either silently
  restore or have a dialog box
- nicer-looking window
 - drop shadows
 - custom caption area
- find
- select text
- tabs
- printing
- Widgets should be links as well
- check for new version on-line
- immediately add a file to "recent history" menu
- select images
- integrate with google desktop search so that you can find *.pdf files easily 
  directly from the app (does it make sense? what if it's just as easy to find
  the files from desktop search?)

Probably won't happen:
- annotation support
- reading of C:\kjk\test_pdfs\pda\palm\dev tools\sdk\user_interface.pdf takes 
  an awfully long time
- get rid of dependency on freetype, use windows functions instead (not sure if that's
  possible with poppler)
- optimize the use of embedded fonts, currently they're being written out
  to disk and then read into memory, which seems completely unnecessary since
  freetype can create a face directly from memory.
  Also, it uses char-by-char IO, which is slow, switch to reading/writing in
  chunks.
- replace windows font scanning code with a better version from mupdf
- C:\kjk\downloads\6.05.HowToBeCreative.pdf popup on every page (but FoxIt PDF also does that)
- use memory mapped files to speedup stuff

Done:
---- v 0.2 released
- much better "About" box
- when pdf not opened, disable menus that are not relevant
- when calculating the page size, use client area size as a guide, not the 
  window size
- no scrollbars in an empty document
- restore windows position from history
- save window positions into history
- bug: file names in history get corrupted
- when a file name is selected from history, open this file
- remember the history of opened files (infinite "Recent Files"). Remember file name and
  UI state (windows posisition, current page, zoom level, scroll position) at the time
  file was close. Restore the UI state when file is re-opened. That way user gets where
  he left off, which is probably what he wants most of the time. Might want to make it
  user-configurable option (not sure if that's what all of the people would want).
  History is infinite (as opposed to only N recently opened, as in most software).
- session saving (similar to what a Firefox extension does). Save the whole state of the app (windows
  position, which PDF file is open, current page, zoom level, scroll position etc.). Restore the
  session when called without a command-line argument.
- access encrypted files
- a better initial size of the window (size of a standard PDF page)
- launch browser for the link
- Go To page dialog
- Ctrl-G - "go to page" dialog
- better mapping of fonts, default to some font if can't find a named mapping
- reimplement void WinPDFCore::resizeToPage(int pg)
- make DBG_OUT away in release build
- "Go To" (next/prev/first/last,page) menu
- fix flicker with double buffering
- backspace to do the opposite of space
- bug: window size slightly changes at startup, don't know why
- drawing issues resolved (SetDIBSToDevice is driving me crazy)
- facing and continuous facing mode
- Rotate left/right
---- v 0.1 released

*/


